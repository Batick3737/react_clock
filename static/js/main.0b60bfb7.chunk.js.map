{"version":3,"sources":["components/Clock.tsx","App.tsx","index.tsx"],"names":["Clock","state","date","Date","toLocaleTimeString","timerId","this","setInterval","setState","console","log","prevProps","name","props","clearInterval","className","React","Component","App","isClockVisible","clockName","randomNumber","Math","round","random","type","onClick","ReactDOM","render","document","getElementById"],"mappings":"iPAWaA,EAAb,4MACEC,MAAQ,CACNC,MAAM,IAAIC,MAAOC,sBAFrB,EAKEC,aALF,yDAOE,WAAqB,IAAD,OAClBC,KAAKD,QAAUE,aAAY,WACzB,EAAKC,SAAS,CAAEN,MAAM,IAAIC,MAAOC,uBAEjCK,QAAQC,IAAI,EAAKT,MAAMC,QACtB,OAZP,gCAeE,SAAmBS,GAEjBF,QAAQC,IAAR,qCAA0CC,EAAUC,KAApD,eAA+DN,KAAKO,MAAMD,SAjB9E,kCAoBE,WACMN,KAAKD,SACPS,cAAcR,KAAKD,WAtBzB,oBA0BE,WACE,OACE,qCACE,6CACA,qBAAKU,UAAU,QAAf,SACE,oBAAG,UAAQ,OAAX,0BAEG,IACAT,KAAKL,MAAMC,iBAlCxB,GAA2Bc,IAAMC,WCD3BC,E,4MACJjB,MAAQ,CACNkB,gBAAgB,EAChBC,UAAW,K,EAGbC,aAAe,WACb,EAAKb,SAAS,CACZY,UAAWE,KAAKC,MAAsB,IAAhBD,KAAKE,a,4CAI/B,WAAU,IAAD,OACP,OACE,sBAAKT,UAAU,MAAf,UACE,wBACEU,KAAK,SACLC,QAASpB,KAAKe,aAFhB,6BAMA,wBACEI,KAAK,SACLC,QAAS,kBAAM,EAAKlB,SAAS,CAAEW,gBAAgB,KAFjD,wBAMA,wBACEM,KAAK,SACLC,QAAS,kBAAM,EAAKlB,SAAS,CAAEW,gBAAgB,KAFjD,wBAMA,8BACGb,KAAKL,MAAMmB,YAEbd,KAAKL,MAAMkB,gBAAkB,cAAC,EAAD,CAAOP,KAAMN,KAAKL,MAAMmB,mB,GApC5CJ,IAAMC,WA0CTC,ICjDfS,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.0b60bfb7.chunk.js","sourcesContent":["import React from 'react';\nimport './Clock.scss';\n\ntype Props = {\n  name: number;\n};\n\ntype State = {\n  date: string;\n};\n\nexport class Clock extends React.Component<Props, State> {\n  state = {\n    date: new Date().toLocaleTimeString(),\n  };\n\n  timerId?: NodeJS.Timer;\n\n  componentDidMount() {\n    this.timerId = setInterval(() => {\n      this.setState({ date: new Date().toLocaleTimeString() });\n      // eslint-disable-next-line no-console\n      console.log(this.state.date);\n    }, 1000);\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    // eslint-disable-next-line no-console\n    console.log(`The Clock was renamed from ${prevProps.name} to ${this.props.name}`);\n  }\n\n  componentWillUnmount() {\n    if (this.timerId) {\n      clearInterval(this.timerId);\n    }\n  }\n\n  render() {\n    return (\n      <>\n        <h1>React clock</h1>\n        <div className=\"clock\">\n          <p data-cy=\"time\">\n            Current time:\n            {' '}\n            {this.state.date}\n          </p>\n        </div>\n      </>\n    );\n  }\n}\n","import React from 'react';\nimport './App.scss';\n\nimport { Clock } from './components/Clock';\n\ntype State = {\n  isClockVisible: boolean;\n  clockName: number;\n};\n\nclass App extends React.Component<{}, State> {\n  state = {\n    isClockVisible: true,\n    clockName: 123,\n  };\n\n  randomNumber = () => {\n    this.setState({\n      clockName: Math.round(Math.random() * 1000),\n    });\n  };\n\n  render() {\n    return (\n      <div className=\"App\">\n        <button\n          type=\"button\"\n          onClick={this.randomNumber}\n        >\n          Set random name\n        </button>\n        <button\n          type=\"button\"\n          onClick={() => this.setState({ isClockVisible: true })}\n        >\n          Show Clock\n        </button>\n        <button\n          type=\"button\"\n          onClick={() => this.setState({ isClockVisible: false })}\n        >\n          Hide Clock\n        </button>\n        <div>\n          {this.state.clockName}\n        </div>\n        {this.state.isClockVisible && <Clock name={this.state.clockName} />}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}